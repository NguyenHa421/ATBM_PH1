conn ADMIN/group12
-- CS#4: 
-- YC1
GRANT GIAOVIEN TO TRUONGDONVI;
/
-- YC2

CREATE OR REPLACE VIEW TDV_PHANCONG AS
    SELECT *
    FROM TB_PHANCONG
    WHERE MaHP IN (
                SELECT HP.MaHP 
                FROM TB_HOCPHAN HP, TB_DONVI DV
                WHERE HP.MADV = DV.MADV
                AND DV.TRGDV = SYS_CONTEXT('USERENV', 'SESSION_USER'));
                
GRANT INSERT, DELETE, UPDATE ON TDV_PHANCONG TO TRUONGDONVI;

-- YC3
CREATE OR REPLACE VIEW TDV_PHANCONG2 AS
    SELECT PC.*, NS.HOTEN
    FROM TB_PHANCONG PC, TB_NHANSU NS
    WHERE PC.MAGV = NS.MANV
    AND MaHP IN (
                SELECT HP.MaHP 
                FROM TB_HOCPHAN HP, TB_DONVI DV
                WHERE HP.MADV = DV.MADV
                AND DV.TRGDV = SYS_CONTEXT('USERENV', 'SESSION_USER'));
                
GRANT SELECT ON TDV_PHANCONG2 TO TRUONGDONVI;

/
-- CS#5
--YC1
GRANT GIAOVIEN TO TRUONGKHOA;
-- YC2
CREATE OR REPLACE VIEW TK_PHANCONG AS
    SELECT *
    FROM TB_PHANCONG
    WHERE MaHP IN (
                SELECT HP.MaHP 
                FROM TB_HOCPHAN HP, TB_DONVI DV
                WHERE HP.MADV = DV.MADV
                AND DV.TENDV = 'Van phong khoa');
/

CREATE OR REPLACE TRIGGER UTR_DEL_PHANCONG
BEFORE DELETE
ON TB_PHANCONG
FOR EACH ROW
BEGIN
    DELETE FROM TB_DANGKY
    WHERE MAGV = :OLD.MAGV
    AND MAHP = :OLD.MAHP
    AND HK = :OLD.HK
    AND NAM = :OLD.NAM
    AND MACT = :OLD.MACT;
END; 
/

GRANT SELECT, INSERT, DELETE, UPDATE ON ADMIN.TK_PHANCONG TO TRUONGKHOA;
/
-- YV3
GRANT SELECT, INSERT, DELETE, UPDATE ON ADMIN.TB_NHANSU TO TRUONGKHOA;
-- YC4 ????????????
/
GRANT SELECT ANY TABLE TO TRUONGKHOA

-- CS#6
/
-- fun1
CREATE OR REPLACE FUNCTION SV_FUN1
 (P_SCHEMA VARCHAR2, P_OBJ VARCHAR2)
RETURN VARCHAR2
AS
    p_user VARCHAR2(100);
    return_value VARCHAR2(100); 
BEGIN
    SELECT SYS_CONTEXT('USERENV', 'SESSION_USER') INTO p_user FROM DUAL;
    IF SUBSTR(p_user,0,1) != 'N' THEN
        return_value := 'MASV = SYS_CONTEXT(''USERENV'', ''SESSION_USER'')';
    ELSE
        return_value := '1 = 1';
    END IF;
    RETURN return_value;
END;

/
BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_SINHVIEN',
     POLICY_NAME =>'SV_1');
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_SINHVIEN',
     POLICY_NAME =>'SV_1',
     POLICY_FUNCTION=>'SV_FUN1',
     STATEMENT_TYPES=>'SELECT'
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
GRANT SELECT ON TB_SINHVIEN TO SINHVIEN;

/
BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_SINHVIEN',
     POLICY_NAME =>'SV_2');
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_SINHVIEN',
     POLICY_NAME =>'SV_2',
     POLICY_FUNCTION=>'SV_FUN1',
     STATEMENT_TYPES=>'UPDATE',
     SEC_RELEVANT_COLS => 'DCHI, DT',
     UPDATE_CHECK => TRUE
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
GRANT UPDATE ON TB_SINHVIEN TO SINHVIEN;

-- fun 2
CREATE OR REPLACE FUNCTION SV_FUN2
 (P_SCHEMA VARCHAR2, P_OBJ VARCHAR2)
RETURN VARCHAR2
AS
    p_user VARCHAR2(100);
    return_value VARCHAR2(100); 
BEGIN
    SELECT SYS_CONTEXT('USERENV', 'SESSION_USER') INTO p_user FROM DUAL;
    IF SUBSTR(p_user,0,1) != 'N' THEN
        return_value := ' MAHP IN (  SELECT MAHP 
                                     FROM ADMIN.TB_KHMO)';
    ELSE
        return_value := '1 = 1';
    END IF;
    RETURN return_value;
END; 
/

BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_HOCPHAN',
     POLICY_NAME =>'SV_3');
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_HOCPHAN',
     POLICY_NAME =>'SV_3',
     POLICY_FUNCTION=>'SV_FUN2',
     STATEMENT_TYPES=>'SELECT'
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
GRANT SELECT ON TB_HOCPHAN TO SINHVIEN;
GRANT SELECT ON TB_KHMO TO SINHVIEN;

/
-- fun3
CREATE OR REPLACE FUNCTION SV_FUN3
 (P_SCHEMA VARCHAR2, P_OBJ VARCHAR2)
RETURN VARCHAR2
AS
    p_user VARCHAR2(100);
    return_value VARCHAR2(100); 
BEGIN
    SELECT SYS_CONTEXT('USERENV', 'SESSION_USER') INTO p_user FROM DUAL;
    IF SUBSTR(p_user,0,1) != 'N' THEN
        return_value := ' MACT IN (  SELECT MACT
                                    FROM ADMIN.TB_SINHVIEN)';
    ELSE
        return_value := '1 = 1';
    END IF;
    RETURN return_value;
END; 

/
BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_KHMO',
     POLICY_NAME =>'SV_4');
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_KHMO',
     POLICY_NAME =>'SV_4',
     POLICY_FUNCTION=>'SV_FUN3',
     STATEMENT_TYPES=>'SELECT',
     UPDATE_CHECK => TRUE
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/

CREATE OR REPLACE FUNCTION SV_FUN4 (
    schema_name IN VARCHAR2,
    table_name IN VARCHAR2)
RETURN VARCHAR2 AS
    v_hocky NUMBER;
    v_ngaybatdau DATE;
    v_nam NUMBER;
    p_user VARCHAR2(100);
    return_value VARCHAR2(2000); 
BEGIN
    SELECT SYS_CONTEXT('USERENV', 'SESSION_USER') INTO p_user FROM DUAL;
    IF SUBSTR(p_user,0,1) != 'N' THEN
        IF TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) BETWEEN 1 AND 4 THEN
            v_hocky := 1;
            v_ngaybatdau := TO_DATE(TO_CHAR(SYSDATE, 'YYYY') || '-01-01', 'YYYY-MM-DD');
        ELSIF TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) BETWEEN 5 AND 8 THEN
            v_hocky := 2;
            v_ngaybatdau := TO_DATE(TO_CHAR(SYSDATE, 'YYYY') || '-05-01', 'YYYY-MM-DD');
        ELSE
            v_hocky := 3;
            v_ngaybatdau := TO_DATE(TO_CHAR(SYSDATE, 'YYYY') || '-09-01', 'YYYY-MM-DD');
        END IF;
        v_nam := TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'));
        return_value :=  '  MASV = SYS_CONTEXT(''USERENV'', ''SESSION_USER'') 
                            AND HK = ' || v_hocky || '
                            AND NAM = ' || v_nam || '
                            AND SYSDATE <= TO_DATE( '''|| TO_CHAR(v_ngaybatdau, 'YYYY-MM-DD') ||''' , ''YYYY-MM-DD'') + 14';
    ELSE
        return_value := '1 = 1';
    END IF;
    
    RETURN return_value;
END;
/
BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_DANGKY',
     POLICY_NAME =>'SV_5'
);
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_DANGKY',
     POLICY_NAME =>'SV_5',
     POLICY_FUNCTION=>'SV_FUN4',
     STATEMENT_TYPES=>'DELETE'
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_DANGKY',
     POLICY_NAME =>'SV_7'
);
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_DANGKY',
     POLICY_NAME =>'SV_7',
     POLICY_FUNCTION=>'SV_FUN4',
     STATEMENT_TYPES=>'INSERT',
     UPDATE_CHECK=>TRUE
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
GRANT SELECT, INSERT, DELETE ON TB_DANGKY TO SINHVIEN
/

BEGIN
    DBMS_RLS.DROP_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_DANGKY',
     POLICY_NAME =>'SV_6');
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
BEGIN
     DBMS_RLS.ADD_POLICY(
     OBJECT_SCHEMA =>'ADMIN',
     OBJECT_NAME =>'TB_DANGKY',
     POLICY_NAME =>'SV_6',
     POLICY_FUNCTION=>'SV_FUN1',
     STATEMENT_TYPES=>'SELECT'
 );
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
